# -*- coding: utf-8 -*-
"""Untitled22.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ycp6GMZx7odRE_Ix2-ONY31ofjQBF-Nj
"""

import pandas as pd

import numpy  as np

pip install rasterio

soil_df=pd.read_csv("drive/MyDrive/Colab Notebooks/soildta.csv")

soil_df

soil_df.loc[soil_df['msmi'] <=0.40, 'soiltype']='dry'
soil_df.loc[soil_df['msmi'] >=0.40, 'soiltype'] = 'wet'



X=soil_df.drop(['soiltype'],axis=1)

Y=soil_df['soiltype']



from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test = train_test_split(X, Y, test_size = 0.4,random_state= 3)

from sklearn.ensemble import RandomForestClassifier
# Create a Random forest Classifier
clf = RandomForestClassifier(n_estimators = 500)
 
# Train the model using the training sets
clf.fit(X_train, Y_train)



# Training the model on the training dataset
# fit function is used to train the model using the training sets as parameters
clf.fit(X_train, Y_train)
 
# performing predictions on the test dataset
y_pred = clf.predict(X_test)
 
# metrics are used to find accuracy or error
from sklearn import metrics 

 
# using metrics module for accuracy calculation
print("ACCURACY OF THE MODEL: ", metrics.accuracy_score(Y_test, y_pred))

import seaborn as sns

import matplotlib as plt

sns.scatterplot(data=soil_df,x="ndvi",y="smi")

soil_df.corr().plot()

sns.heatmap(soil_df.corr())



clay_index=